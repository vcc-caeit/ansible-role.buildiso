---
- name: Set PPA facts
  set_fact:
    buildiso_ppa_api: "{{ buildiso_ppa | regex_replace('ppa:([a-z0-9-]+)/([a-z0-9-]+)', 'https://launchpad.net/api/1.0/~\\1/+archive/\\2') }}"
    buildiso_ppa_url: "{{ buildiso_ppa | regex_replace('ppa:([a-z0-9-]+)/([a-z0-9-]+)', 'http://ppa.launchpad.net/\\1/\\2/ubuntu') }}"
    buildiso_ppa_name: "{{ buildiso_ppa | regex_replace('ppa:[a-z0-9-]+/([a-z0-9-]+)', '\\1') }}"
    buildiso_ppa_dist: "{{ '/dists/' + buildiso_dist + '/' }}"
    buildiso_ppa_path: "{{ buildiso_ppafs + '/ppa' }}"

- name: Fetch PPA information
  uri:
    url: "{{ buildiso_ppa_api }}"
    return_content: true
  register: buildiso_ppa_info

- name: Ensure base directories
  file:
    path: "{{ buildiso_ppafs + item }}"
    state: directory
  loop:
    - /etc/apt/sources.list.d/
    - /etc/apt/trusted.gpg.d/
    - "{{ '/ppa' + buildiso_ppa_dist }}"

- name: Ensure repository keyring
  apt_key:
    id: "{{ buildiso_ppa_info.json.signing_key_fingerprint }}"
    keyring: "{{ buildiso_ppafs + '/etc/apt/trusted.gpg.d/' + buildiso_ppa_name + '.gpg' }}"
    keyserver: keyserver.ubuntu.com

- name: Ensure repository sources.list
  copy:
    content: "deb [arch=amd64] file:///ppa/ {{ buildiso_dist }} main"
    dest: "{{ buildiso_ppafs + '/etc/apt/sources.list.d/' + buildiso_ppa_name + '.list' }}"

- name: Sync Release files
  get_url:
    url: "{{ buildiso_ppa_url + buildiso_ppa_dist + item }}"
    dest: "{{ buildiso_ppa_path + buildiso_ppa_dist + item }}"
    force: true
  loop:
    - "Release"
    - "Release.gpg"

- name: Ensure dists directories
  file:
    path: "{{ buildiso_ppa_path + buildiso_ppa_dist + 'main/' + item }}"
    state: directory
  loop:
    - binary-amd64
    - i18n
  loop_control:
    label: "{{ 'main/' + item }}"
  register: buildiso_ppa_metadir

- name: Sync dists files
  get_url:
    url: "{{ buildiso_ppa_url + buildiso_ppa_dist + item.1 }}"
    dest: "{{ buildiso_ppa_path + buildiso_ppa_dist + item.1 }}"
    checksum: "sha256:{{ item.0 }}"
  loop: "{{ lookup('file', buildiso_ppa_path + buildiso_ppa_dist + '/Release') | \
         regex_findall(' ([a-z0-9]{64})\\s+\\d+ (main/(' + buildiso_ppa_metadir.results | \
         map(attribute='item') | list | join('|') + ')/[a-zA-Z0-9-_\\.]*)') | unique }}"
  loop_control:
    label: "[u'{{ item.0 }}', u'{{ item.1 }}']"
  when: ('Packages' != item.1 | basename) and ('Translation-en' != item.1 | basename) and ('Sources' != item.1 | basename)

- name: Read Packages files
  command: "zgrep -h -e ^Filename: -e ^SHA256: {{ lookup('pipe', 'find ' + buildiso_ppa_path + ' -name Packages.gz') }}"
  register: buildiso_ppa_pool

- name: Ensure pool directories
  file:
    path: "{{ buildiso_ppa_path }}/{{ item }}"
    state: directory
    unsafe_writes: true
  loop: "{{ buildiso_ppa_pool.stdout | regex_findall('Filename: (.*)/.*') | unique }}"

- name: Sync pool files
  get_url:
    url: "{{ buildiso_ppa_url }}/{{ item.0 }}"
    dest: "{{ buildiso_ppa_path }}/{{ item.0 }}"
    checksum: "sha256:{{ item.1 }}"
  loop: "{{ buildiso_ppa_pool.stdout | regex_findall('Filename: (.*)') | \
         zip(buildiso_ppa_pool.stdout | regex_findall('SHA256: ([a-z0-9]{64})')) | list | unique }}"
  loop_control:
    label: "[u'{{ item.1 }}', u'{{ item.0 }}']"

- name: Build squashfs image
  command: "mksquashfs {{ buildiso_ppafs + ' ' + buildiso_writable + '/casper/ppa.squashfs' }}"

- name: Append checksum of squashfs image to md5sum.txt
  lineinfile:
    path: "{{ buildiso_writable }}/md5sum.txt"
    line: "{{ lookup('pipe', 'md5sum ' + buildiso_writable + '/casper/ppa.squashfs') | regex_replace(buildiso_writable, '.') }}"
    create: true
    state: present
